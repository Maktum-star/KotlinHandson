package KotlinSamples.reflection.ClassReflection

// kotlin-reflect.jar

import kotlin.reflect.KClass

data class Person(var name:String, var age:String)

open class Base(x:Int)
class Derived(x:Int) : Base(x)

// bound class references
fun process(b:Base){
  if (b is Derived) {
    println(b::class.qualifiedName)
  }
}

fun main(args: Array<String>) {
  val c: KClass<Person> = Person::class
  println(c.qualifiedName)
  println(c.members.map { it.name })
  println("Is a companion? ${c.isCompanion}")

  // the java reflection object
  var j: Class<Person> = c.java
  println(j.simpleName)

  var z:Base = Derived(123)
  process(z)
}